user www-data;

events {
    worker_connections 8000;
    use epoll;
    multi_accept on;
}

http {
    include    /etc/nginx/mime.types;
    # include    /etc/nginx/proxy.conf;
    # include    /etc/nginx/fastcgi.conf;
    index    index.html index.htm;
    
    keepalive_timeout 500;
    keepalive_requests 5000;

    client_max_body_size 32m;
    client_body_buffer_size 32m;

    sendfile on;
    server_tokens off;

    tcp_nopush on;
    tcp_nodelay on;
    reset_timedout_connection on;

    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_types application/javascript application/json application/xml text/css text/plain text/xml;
    gzip_vary on;

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    upstream php-fpm {
        server 127.0.0.1:9000 max_fails=5 fail_timeout=5s;
    }

    server {
        listen 80;
        listen [::]:80;
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        ssl_certificate /etc/nginx/eksicode.crt;
        ssl_certificate_key /etc/nginx/eksicode.key;
        
        server_name demo-api.eksicode.org;

        root /var/www/public;
        index index.php;

        error_log  /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;

        include /etc/nginx/mime.types;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php$ {
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            include fastcgi_params;
        }
    }

    # Eksicode Frontend
    server {
      ssl_prefer_server_ciphers on;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

      server_name demo.eksicode.org;

      location / {
        # resolver 127.0.0.11 8.8.8.8;
        proxy_pass http://frontend:4000;
        client_max_body_size 200M;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }

      listen 80;
      listen [::]:80;
      listen 443 ssl http2;
      listen [::]:443 ssl http2;

      ssl_certificate /etc/nginx/eksicode.crt;
      ssl_certificate_key /etc/nginx/eksicode.key;
    }
}











# events {
#     worker_connections  8000;  ## Default: 1024
#     multi_accept on;
# }
# http {
#   include    /etc/nginx/mime.types;
#   # include    /etc/nginx/proxy.conf;
#   # include    /etc/nginx/fastcgi.conf;
#   index    index.html index.htm;

#   ssl_session_cache shared:SSL:5m;
#   ssl_session_timeout 1h;

#   default_type application/octet-stream;
#   log_format   main '$remote_addr - $remote_user [$time_local]  $status '
#     '"$request" $body_bytes_sent "$http_referer" '
#     '"$http_user_agent" "$http_x_forwarded_for"';
#   access_log   /etc/nginx/logs/access.log  main;
#   sendfile     on;
#   tcp_nopush   on;
#   server_names_hash_bucket_size 128; # this seems to be required for some vhosts

#   error_log /etc/nginx/logs/error.log warn;

#   proxy_cache_path /etc/nginx/cache keys_zone=one:500m max_size=1000m;

#   # Eksicode Api
#   server {
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    

#     server_name demo-api.eksicode.org;

#     location / {
#       resolver 127.0.0.11 8.8.8.8;
#       proxy_pass http://backend:8080;
#       client_max_body_size 200M;
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection 'upgrade';
#       proxy_set_header Host $host;
#       proxy_cache_bypass $http_upgrade;
#     }

#     listen 80;
#     listen [::]:80;
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     http2 on;

#     ssl_certificate /etc/nginx/eksicode.crt;
#     ssl_certificate_key /etc/nginx/eksicode.key;

#   }


# }