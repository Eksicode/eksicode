# Main Events Context
events {
    worker_processes auto; # Automatically detect number of cores
    worker_connections 8000;
    multi_accept on;
}

# HTTP Context
http {
    # Basic Settings
    include /etc/nginx/mime.types;
    include /etc/nginx/proxy.conf;
    include /etc/nginx/fastcgi.conf;
    
    default_type application/octet-stream;
    index index.html index.htm;
    server_names_hash_bucket_size 128;
    client_max_body_size 200M;

    # SSL Settings
    ssl_session_cache shared:SSL:5m;
    ssl_session_timeout 1h;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    
    # Logging Settings
    log_format main '$remote_addr - $remote_user [$time_local] $status '
                    '"$request" $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /etc/nginx/logs/access.log main;
    error_log /etc/nginx/logs/error.log warn;

    # Performance Settings
    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;

    # Proxy Cache Settings
    proxy_cache_path /etc/nginx/cache keys_zone=one:500m max_size=1000m;

    # Common Proxy Settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    # SSL Certificate Settings
    ssl_certificate /etc/nginx/eksicode.crt;
    ssl_certificate_key /etc/nginx/eksicode.key;

    # API Server
    server {
        server_name demo-api.eksicode.org;
        
        # HTTP
        listen 80;
        listen [::]:80;
        
        # HTTPS
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        # Redirect HTTP to HTTPS
        if ($scheme != "https") {
            return 301 https://$server_name$request_uri;
        }

        # Location Blocks
        location / {
            proxy_pass http://backend:9000;
        }

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }

    # Frontend Server
    server {
        server_name demo.eksicode.org;
        
        # HTTP
        listen 80;
        listen [::]:80;
        
        # HTTPS
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        # Redirect HTTP to HTTPS
        if ($scheme != "https") {
            return 301 https://$server_name$request_uri;
        }

        # Location Blocks
        location / {
            proxy_pass http://frontend:3000;
        }

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }
}