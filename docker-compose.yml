version: "3.8"
services:
  backend:
    container_name: eksicodeBackend
    build: ./backend
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app/
    networks:
      - eksicode_nw

  # frontend:
  #   container_name: eksicodeFrontend
  #   build: ./frontend
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - ./frontend/.env
  #   volumes:
  #     - ./frontend:/app/
  #   restart: on-failure
  #   networks:
  #     - eksicode_nw

  nginx:
    container_name: nginx
    image: nginx
    environment:
      - TZ=Europe/Istanbul
      - PROTOCOL=HTTP
    privileged: true
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs/:/etc/nginx/logs/
      - ./nginx/mime.types:/etc/nginx/mime.types
      - ./nginx/cache/:/etc/nginx/cache/
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    networks:
      - eksicode_nw

  # db:
    # image: postgres:12
    # container_name: db
    # restart: always
    # # volumes:
    # #   - db_data:/var/lib/postgresql/data
    # environment:
    #   POSTGRES_PASSWORD: eksicode
    #   POSTGRES_USER: eksicode
    #   POSTGRES_DB: eksicode
    # ports:
    #   - "54320:5432"
    # networks:
    #   - eksicode_nw

volumes:
  backend:
  # frontend:
  nginx:
  # db:

networks:
  eksicode_nw: