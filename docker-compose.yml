services:
  frontend:
    container_name: eksicodeFrontend
    build: 
      context: ./frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    environment:
      - NEXT_STATIC_PAGE_GENERATION_TIMEOUT=180
      - NODE_OPTIONS="--max-old-space-size=4096"
    volumes:
      - ./frontend:/app/
      - /app/node_modules
      - /app/.next
    restart: on-failure
    networks:
      main:
        aliases:
          - eksicode_nw
    depends_on:
      - backend

  backend:
    container_name: eksicodeBackend
    build: 
      context: ./backend
    working_dir: /app
    ports:
      - "9000:9000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      main:
        aliases:
          - eksicode_nw  
    command: sh -c "npm run build && npm run start" 

  # backend:
  #   container_name: eksicodeBackend
  #   build: 
  #     context: ./backend
  #   working_dir: /app
  #   ports:
  #     - "9000:9000"
  #   env_file:
  #     - ./backend/.env
  #   volumes:
  #     - ./backend:/app
  #     - /app/node_modules
  #   networks:
  #     main:
  #       aliases:
  #         - eksicode_nw

  # frontend:
  #   container_name: eksicodeFrontend
  #   build: 
  #     context: ./frontend
  #     # target: production
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - ./frontend/.env
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #     - /app/.next
  #   restart: on-failure
  #   networks:
  #     main:
  #       aliases:
  #         - eksicode_nw

  nginx:
    container_name: nginx
    image: nginx
    environment:
      - TZ=Europe/Istanbul
      - PROTOCOL=HTTP
    privileged: true
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs/:/etc/nginx/logs/
      - ./nginx/mime.types:/etc/nginx/mime.types
      - ./nginx/cache/:/etc/nginx/cache/
      - ./nginx/eksicode.crt:/etc/nginx/eksicode.crt
      - ./nginx/eksicode.key:/etc/nginx/eksicode.key
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    volumes_from:
      - backend
      - frontend
    networks:
      main:
        aliases:
          - eksicode_nw

volumes:
  backend:
  frontend:
  nginx:

networks:
  main:
